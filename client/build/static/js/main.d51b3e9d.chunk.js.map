{"version":3,"sources":["pages/Home.js","utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/DrinkItem/index.js","utils/queries.js","assets/spinner.gif","components/DrinkList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Menu.js","pages/Detail.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","Container","fluid","Row","Col","className","Image","src","alt","Button","variant","href","size","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_DRINKS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","drinks","cartOpen","cart","drink","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","useReducer","dispatch","useStoreContext","useContext","DrinkItem","item","image","price","quantity","to","vairant","onClick","itemInCart","find","cartItem","parseInt","QUERY_DRINKS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","DrinkList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","lineHeight","id","CartItem","placeholder","onChange","target","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","drinkIds","i","push","variables","role","Menu","Detail","useParams","useState","currentDrink","setCurrentDrink","indexedDrinks","description","disabled","p","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","Form","onSubmit","Group","Label","htmlFor","Control","required","Feedback","Signup","addUser","firstName","lastName","NavBar","Navbar","collapseOnSelect","expand","bg","Brand","as","Link","Toggle","Collapse","Nav","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Footer","Card","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d51b3e9d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap'\r\nfunction Home (props) {\r\n    return (\r\n        <Container fluid>\r\n        <Row>\r\n          <Col className='text-center'>\r\n          <Image src=\"./images/menu.jpg\" alt=\"display\" fluid/>\r\n          <h1 className='mt-5'>Welcome to Aroma Mocha</h1>\r\n          <Button className='mt-3' variant =\"dark\" href='/menu' size=\"lg\">\r\n          Order</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n};\r\nexport default Home;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('drinks', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_DRINKS = \"UPDATE_DRINKS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_DRINKS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_DRINKS:\n      return {\n        ...state,\n        drinks: [...action.drinks],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.drink],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.drinks],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(drink => {\n          if (action._id === drink._id) {\n            drink.purchaseQuantity = action.purchaseQuantity\n          }\n          return drink\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(drink => {\n        return drink._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useDrinkReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","// TODO: Add a comment briefly describing the functionality of `useContext`\n// Your comment here\n\nimport React, { createContext, useContext } from 'react';\n\n// TODO: Add a comment describing the React hook that `useProductReducer` makes use of\n// Your comment here\n\nimport { useDrinkReducer } from './reducers';\n\n// TODO: Add a comment briefly describing what `createContext` does and what it returns\n// Your comment here\n\nconst StoreContext = createContext();\n\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useDrinkReducer({\n    drinks: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  // TODO: Add a comment explaining why we passed a `value` attribute to the `Provider`\n  // Your comment here\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\n// TODO: Add a comment describing the purpose of our custom `useStoreContext` hook\n// Your comment here\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { Button } from 'react-bootstrap';\n\nfunction DrinkItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        drink: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/drinks/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <Button type='button' vairant='dark' onClick={addToCart}>Add to cart</Button>\n    </div>\n    \n  );\n}\n\nexport default DrinkItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_DRINKS = gql`\n  query getDrinks($category: ID) {\n    drinks(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($drinks: [ID]!) {\n    checkout(drinks: $drinks) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_DRINKS = gql`\n  {\n    drinks {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        drinks {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport DrinkItem from '../DrinkItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_DRINKS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_DRINKS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction DrinkList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_DRINKS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_DRINKS,\n        drinks: data.drinks,\n      });\n      data.drinks.forEach((drink) => {\n        idbPromise('drinks', 'put', drink);\n      });\n    } else if (!loading) {\n      idbPromise('drinks', 'get').then((drinks) => {\n        dispatch({\n          type: UPDATE_DRINKS,\n          drinks: drinks,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterDrinks() {\n    if (!currentCategory) {\n      return state.drinks;\n    }\n\n    return state.drinks.filter(\n      (drink) => drink.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Drinks:</h2>\n      {state.drinks.length ? (\n        <div className=\"flex-row\">\n          {filterDrinks().map((drink) => (\n            <DrinkItem\n              key={drink._id}\n              _id={drink._id}\n              image={drink.image}\n              name={drink.name}\n              price={drink.price}\n              quantity={drink.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any drinks yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default DrinkList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <Container>\n    <Row className='text-center'>\n        <Col>\n{categories.map(item => (\n    <Button type=\"button\"\n        variant=\"dark\"\n        lineHeight=\"1\"\n        size=\"lg\"\n        className=\"m-2\" \n        key={item._id}\n        onClick={() => {\n            handleClick(item._id);\n        }}\n    >\n        {item.name}\n    </Button>\n    \n))}\n</Col>\n</Row>\n</Container>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { Button } from 'react-bootstrap';\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <Button \n          onClick={() => removeFromCart(item)}\n          type='button'\n          variant='secondary'>Remove</Button>\n         \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\n// TODO: Add a comment describing the functionality of loadStripe\n// Your comment here\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // TODO: Add a comment describing the functionality of the useEffect hook in this instance\n  // Your comment here\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // TODO: Add a comment describing what data we are watching and what work should be preformed if that data changes\n  // Your comment here\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, drinks: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // TODO: Add a comment describing the functionality of our submitCheckout function.\n  // Your comment here\n  function submitCheckout() {\n    const drinkIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        drinkIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { drinks: drinkIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n \n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        Close\n      </div>\n      <h2>Drink cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n         Your cart is empty!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport DrinkList from \"../components/DrinkList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap';\nconst Menu = () => {\n  return (  \n    <Container fluid>\n      <Row>\n        <Col>\n      <CategoryMenu />\n      <DrinkList />\n      <Cart />\n      </Col>\n      </Row>\n      </Container>\n  );\n};\n\nexport default Menu;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_DRINKS,\n} from '../utils/actions';\nimport { QUERY_DRINKS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\nimport { Button } from 'react-bootstrap';\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentDrink, setCurrentDrink] = useState({});\n\n  const { loading, data } = useQuery(QUERY_DRINKS);\n\n  const { drinks, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (drinks.length) {\n      setCurrentDrink(drinks.find((drink) => drink._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_DRINKS,\n        drinks: data.drinks,\n      });\n\n      data.drinks.forEach((drink) => {\n        idbPromise('drinks', 'put', drink);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('drinks', 'get').then((indexedDrinks) => {\n        dispatch({\n          type: UPDATE_DRINKS,\n          drinks: indexedDrinks,\n        });\n      });\n    }\n  }, [drinks, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        drink: { ...currentDrink, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentDrink, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentDrink._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentDrink });\n  };\n\n  return (\n    <>\n      {currentDrink && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Drinks</Link>\n\n          <h2>{currentDrink.name}</h2>\n\n          <p>{currentDrink.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentDrink.price}{' '}\n            <Button type='button' variant='dark' onClick={addToCart}>Add to Cart</Button>\n            <Button\n              disabled={!cart.find((p) => p._id === currentDrink._id)}\n              onClick={removeFromCart}\n              type='button'\n              variant='dark'\n            >\n              Remove from Cart\n            </Button>\n          </p>\n\n          <img\n            src={`/images/${currentDrink.image}`}\n            alt={currentDrink.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n// import Jumbotron from \"../components/Jumbotron\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap';\nconst NoMatch = () => {\n  return (\n    <Container fluid>\n            <Row>\n                <Col className='text-center'>\n                <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n                </Col>\n            </Row>\n        </Container>\n    \n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($drinks: [ID]!) {\n    addOrder(drinks: $drinks) {\n      purchaseDate\n      drinks {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n// import { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Button, Form } from 'react-bootstrap';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Container>\n      <Button className=\"m-4\" variant='dark' href='/signup' size='lg' fluid>\n              Back to Signup\n            </Button>\n        <Row className='justify-content-md-center'>\n        \n    <Form onSubmit={handleFormSubmit}>\n     <Form.Group className=\"mb-3\">\n      <Form.Label htmlFor='email'>Email</Form.Label>\n      <Form.Control \n      type=\"email\"\n      placeholder=\"Enter your email\"\n      name = 'email'\n      onChange={handleChange}\n      value={formState.email}\n      required  />\n      <Form.Control.Feedback type='invalid'>\n        Enter your email\n      </Form.Control.Feedback>\n    </Form.Group>\n    <Form.Group className=\"mb-3\">\n      <Form.Label htmlFor='password'>Password</Form.Label>\n      <Form.Control \n      type=\"password\"\n      placeholder=\"Enter your password\"\n      name = 'password'\n      onChange={handleChange}\n      value={formState.password}\n      required  />\n      <Form.Control.Feedback type='invalid'>\n        Enter your password\n      </Form.Control.Feedback>\n    </Form.Group>\n            {error ? (\n                <div>\n                    <p className=\"error-text\">The provided credentials are incorrect</p>\n                </div>\n            ) : null}\n      <Button\n        disabled={!(formState.email && formState.password)}\n        type='submit'\n        variant='dark'>\n            Login\n        </Button>\n        </Form>\n       \n        </Row>\n        </Container>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Container, Row, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n\n      <Container>\n        <Button className=\"m-4\" variant='dark' href='/login' size='lg' fluid>\n              Go to Login\n            </Button>\n         <Row className='justify-content-md-center'>\n     <Form onSubmit={handleFormSubmit}>\n      <Form.Group className=\"mb-3\">\n       <Form.Label htmlFor='firstName'>Firstname</Form.Label>\n       <Form.Control \n       type=\"text\"\n       placeholder=\"Enter your first name\"\n       name = 'firstName'\n       onChange={handleChange}\n       value={formState.firstName}\n       required  />\n       <Form.Control.Feedback type='invalid'>\n         Enter your first name\n       </Form.Control.Feedback>\n     </Form.Group>\n     <Form.Group className=\"mb-3\">\n       <Form.Label htmlFor='lastName'>Lastname</Form.Label>\n       <Form.Control \n       type=\"text\"\n       placeholder=\"Enter your last name\"\n       name = 'lastName'\n       onChange={handleChange}\n       value={formState.lastName}\n       required  />\n       <Form.Control.Feedback type='invalid'>\n         Enter your last name\n       </Form.Control.Feedback>\n     </Form.Group>\n     <Form.Group className=\"mb-3\">\n       <Form.Label htmlFor='email'>Email</Form.Label>\n       <Form.Control \n       type=\"email\"\n       placeholder=\"Enter your email\"\n       name = 'email'\n       onChange={handleChange}\n       value={formState.email}\n       required  />\n       <Form.Control.Feedback type='invalid'>\n         Enter your email\n       </Form.Control.Feedback>\n     </Form.Group>\n     <Form.Group className=\"mb-3\">\n       <Form.Label htmlFor='password'>Password</Form.Label>\n       <Form.Control \n       type=\"password\"\n       placeholder=\"Enter your password\"\n       name = 'password'\n       onChange={handleChange}\n       value={formState.password}\n       required  />\n       <Form.Control.Feedback type='invalid'>\n         Enter your password\n       </Form.Control.Feedback>\n     </Form.Group>\n     <Button\n     disabled={!(formState.email && formState.password && formState.firstName && formState.lastName)}\n     type='submit'\n     variant='dark'>\n         Sign Up\n     </Button>\n     </Form>\n    \n     </Row>\n     </Container>\n  );\n}\n\nexport default Signup;\n","\nimport React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar, Container } from 'react-bootstrap';\n\nfunction NavBar(props) {\n\n    if (Auth.loggedIn()) {\n        return (\n            <Navbar collapseOnSelect expand= \"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n              <Navbar.Brand as={Link} to ='/'>Aroma Mocha</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to ='/menu'>Menu</Nav.Link>\n              <Nav.Link as={Link} to ='/cart'>Cart</Nav.Link>\n              <Nav.Link as={Link} to ='/profile'>Profile</Nav.Link>\n              <Nav.Link as={Link} to ='/' onClick={() => Auth.logout()}>Logout</Nav.Link>\n              </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        )\n    } else {\n        return (\n            <Navbar collapseOnSelect expand= \"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n              <Navbar.Brand as={Link} to ='/'>Aroma Mocha</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n              <Navbar.Collapse id=\"responsive-navbar-nav\"></Navbar.Collapse>\n              <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to ='/menu'>Menu</Nav.Link>\n              <Nav.Link as={Link} to ='/cart'>Cart</Nav.Link>\n              <Nav.Link as={Link} to ='/signup'>Signup</Nav.Link>\n              <Nav.Link as={Link} to ='/login'>Login</Nav.Link>\n              </Nav>\n            </Container>\n          </Navbar>\n        )\n    }\n   \n}\nexport default NavBar;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\n// import Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap';\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const drinks = cart.map((item) => item._id);\n\n      if (drinks.length) {\n        const { data } = await addOrder({ variables: { drinks } });\n        const drinkData = data.addOrder.drinks;\n\n        drinkData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n<Container fluid>\n            <Row>\n                <Col className='text-center'>\n                    <h1 className=\"mt-4\">Your order has been submitted!</h1>\n                    <h2 className=\"mt-4\">Thank you</h2>\n                </Col>\n            </Row>\n        </Container>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    \n    <Container>\n        <Row>\n          <Col className=\"text-center\">\n            <Button className=\"m-4\" variant='secondary' href='/menu' size='lg' fluid>\n              Order Drinks\n            </Button>\n     \n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.drinks.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/drinks/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n        </Col>\n        </Row>\n\n      </Container>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n    return (\r\n    <Card className=\"text-center\">\r\n      \r\n        <Card.Footer className='text-muted'>Made by Anh Le</Card.Footer>\r\n      \r\n    </Card>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Home from './pages/Home';\nimport Menu from './pages/Menu';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Footer from './components/Footer';\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n                 <Route \n                path=\"/menu\" \n                element={<Menu />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/drinks/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}